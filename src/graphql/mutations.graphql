mutation AddMeal(
  $name: String
  $date: date
  $time: time
  $data: [meal_item_insert_input!]!
  $u_id: uuid!
) {
  insert_meal_one(
    object: {
      date: $date
      time: $time
      meal_items: { data: $data }
      name: $name
      u_id: $u_id
    }
  ) {
    name
  }
}

mutation UpdateMeal(
  $id: uuid!
  $name: String
  $date: date
  $time: time
  $data: [meal_item_insert_input!]!
  $u_id: uuid!
) {
  delete_meal_item(where: { meal_id: { _eq: $id } }) {
    returning {
      u_id
    }
  }
  delete_meal_by_pk(id: $id) {
    u_id
  }
  insert_meal_one(
    object: {
      date: $date
      time: $time
      meal_items: { data: $data }
      name: $name
      u_id: $u_id
    }
  ) {
    name
  }
}

mutation DeleteMealById($id: uuid!) {
  delete_meal_item(where: { meal_id: { _eq: $id } }) {
    returning {
      u_id
    }
  }
  delete_meal_by_pk(id: $id) {
    u_id
  }
}

mutation AddFood(
  $name: bpchar
  $proteins: numeric
  $fats: numeric
  $energy_kj: numeric
  $energy_cal: numeric
  $carbohydrates: numeric
  $type: String
  $u_id: uuid!
) {
  insert_food(
    objects: {
      name: $name
      type: $type
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      proteins: $proteins
      carbohydrates: $carbohydrates
      fats: $fats
      u_id: $u_id
    }
  ) {
    affected_rows
  }
}

mutation UpdateFood(
  $id: uuid!
  $name: bpchar
  $proteins: numeric
  $fats: numeric
  $energy_kj: numeric
  $energy_cal: numeric
  $carbohydrates: numeric
  $type: String
) {
  update_food_by_pk(
    pk_columns: { id: $id }
    _set: {
      name: $name
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      proteins: $proteins
      type: $type
      fats: $fats
      carbohydrates: $carbohydrates
    }
  ) {
    id
  }
}

mutation DeleteFood($id: uuid!) {
  delete_food_by_pk(id: $id) {
    id
  }
}

mutation AddMealItem(
  $u_id: uuid
  $proteins: numeric
  $fats: numeric
  $energy_kj: numeric
  $energy_cal: numeric
  $carbohydrates: numeric
  $food: uuid
  $meal_id: uuid
  $weight: numeric
  $recipe_id: uuid
) {
  insert_meal_item_one(
    object: {
      carbohydrates: $carbohydrates
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      fats: $fats
      food: $food
      meal_id: $meal_id
      proteins: $proteins
      u_id: $u_id
      weight: $weight
      recipe_id: $recipe_id
    }
  ) {
    id
  }
}

mutation UpdateMealItem(
  $u_id: uuid
  $carbohydrates: numeric
  $energy_cal: numeric
  $energy_kj: numeric
  $fats: numeric
  $proteins: numeric
  $weight: numeric
  $food: uuid
  $meal_id: uuid
  $id: uuid!
  $recipe_id: uuid
) {
  update_meal_item_by_pk(
    pk_columns: { id: $id }
    _set: {
      carbohydrates: $carbohydrates
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      fats: $fats
      food: $food
      meal_id: $meal_id
      proteins: $proteins
      weight: $weight
      u_id: $u_id
      recipe_id: $recipe_id
    }
  ) {
    id
  }
}

mutation DeleteMealItemByPrimaryKey($id: uuid!) {
  delete_meal_item_by_pk(id: $id) {
    id
  }
}

mutation CopyDay($meal_items: [meal_item_insert_input!]!, $name: String!, $time: time!, $u_id: uuid!, $id: uuid!, $date: date!) {
  insert_meal(objects: {meal_items: {data: $meal_items}, date: $date, time: $time, u_id: $u_id, name: $name, id: $id}) {
    affected_rows
  }
}

mutation AddRecipe($u_id: uuid!, $name: String, $description: String) {
  insert_recipe_one(
    object: { u_id: $u_id, description: $description }
  ) {
    id
  }
}

mutation AddRecipeItem(
  $energy_cal: numeric
  $energy_kj: numeric
  $proteins: numeric
  $carbohydrates: numeric
  $fats: numeric
  $recipe_id: uuid!
  $food_id: uuid!
  $u_id: uuid!
  $weight: numeric!
) {
  insert_recipe_item_one(
    object: {
      u_id: $u_id
      food_id: $food_id
      recipe_id: $recipe_id
      weight: $weight
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      proteins: $proteins
      carbohydrates: $carbohydrates
      fats: $fats
    }
  ) {
    id
  }
}

mutation UpdateRecipeNameByPK($id: uuid!, $name: String) {
  update_recipe_by_pk(
    pk_columns: { id: $id }
    _set: { name: $name }
  ) {
    id
  }
}

mutation UpdateRecipeDescByPK($id: uuid!, $description: String) {
  update_recipe_by_pk(
    pk_columns: { id: $id }
    _set: { description: $description }
  ) {
    id
  }
}

mutation UpdateRecipeLinkByPK($id: uuid!, $link: String) {
  update_recipe_by_pk(
    pk_columns: { id: $id }
    _set: { link: $link }
  ) {
    id
  }
}

mutation UpdateRecipePortioningByPK($id: uuid!, $portions: Int) {
  update_recipe_by_pk(
    pk_columns: { id: $id }
    _set: { portions: $portions }
  ) {
    id
  }
}

mutation UpdateRecipeItemByPK(
  $id: uuid!
  $food_id: uuid!
  $weight: numeric
  $energy_cal: numeric
  $energy_kj: numeric
  $proteins: numeric
  $carbohydrates: numeric
  $fats: numeric
) {
  update_recipe_item_by_pk(
    pk_columns: { id: $id }
    _set: {
      food_id: $food_id
      weight: $weight
      energy_cal: $energy_cal
      energy_kj: $energy_kj
      proteins: $proteins
      carbohydrates: $carbohydrates
      fats: $fats
    }
  ) {
    id
  }
}

mutation DeleteRecipeByPK($id: uuid!) {
  delete_recipe_by_pk(id: $id) {
    id
  }
}

mutation DeleteRecipeItemByPK($id: uuid!) {
  delete_recipe_item_by_pk(id: $id) {
    id
  }
}

mutation Register(
  $first_name: name
  $full_name: String
  $last_name: name
  $password: String
  $user_name: name
  $email: String
) {
  insert_users_one(
    object: {
      first_name: $first_name
      full_name: $full_name
      last_name: $last_name
      password: $password
      user_name: $user_name
      email: $email
    }
  ) {
    id
    first_name
    full_name
    last_name
    password
    user_name
    email
  }
}

mutation RegisterFacebookUser(
  $fb_id: String!
  $fb_picture_url: String!
  $full_name: String!
) {
  insert_users_one(
    object: {
      fb_id: $fb_id
      fb_picture_url: $fb_picture_url
      full_name: $full_name
    }
  ) {
    id
    fb_id
    fb_picture_url
    full_name
  }
}

mutation AddFoodType($decription: String, $img_url: String, $value: String!) {
  insert_food_type_one(
    object: { img_url: $img_url, decription: $decription, value: $value }
  ) {
    value
  }
}

mutation DeleteFoodType($value: String!) {
  delete_food_type_by_pk(value: $value) {
    value
  }
}

mutation UpdateFoodType(
  $decription: String
  $img_url: String
  $value: String!
) {
  update_food_type_by_pk(
    pk_columns: { value: $value }
    _set: { value: $value, decription: $decription, img_url: $img_url }
  ) {
    value
  }
}